//
//  GitRepoInteractor.swift
//  Assignment1
//
//  Created by A667271 A667271 on 31/8/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import Alamofire

protocol RepositoryBusinessLogic {
    func fetchRepositories(request: GitRepo.RepositoryLists.Request)
}

protocol GitRepoDataStore {
}

class RepositoryInteractor: RepositoryBusinessLogic, GitRepoDataStore {
    var presenter: RepositoryPresentationLogic?
    
    func fetchRepositories(request: GitRepo.RepositoryLists.Request) {
        AF.request("https://api.github.com/search/repositories?q=ios&per_page=20&page=1")
            .validate()
            .responseDecodable(of: All.self) { (response) in
                switch response.response?.statusCode {
                case 200:
                    guard let repositories = response.value else { return }
                    let response = GitRepo.RepositoryLists.Response(result: repositories.all)
                    self.presenter?.presentRepositories(response: response)
                    print(repositories)
                default:
                    print("API request encountered an error with status code: \(response.response?.statusCode ?? -1)")
                }
            }
        
    }
}


